desc:TimpRoller (by Seiji Shibata)

slider1:127<0,127,1>Velocity Max
slider2:64<0,127,1>Velocity Min
slider3:2<0,10,1>Velocity Rand

slider4:1.45<1,2>Speed in Velocity Max
slider5:1.8<1,2>Speed in Velocity Min
slider6:5<0,10,1>Speed Rand

slider7:13<-0,127,1{0: C-1,1: C#-1,2: D-1,3: D#-1,4: E-1,5: F-1,6: F#-1,7: G-1,8: G#-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: C#0,14: D0,15: D#0-1,16: E0,17: F0,18: F#0,19: G0,20: G#0,21: A0,22: Bb0,23: B0,24: C1,25: C#1,26: D1,27: D#1,28: E1,29: F1,30: F#1,31: G1,32: G#1,33: A1,34: Bb1,35: B1,36: C2,37: C#2,38: D2,39: D#2,40: E2,41: F2,42: F#2,43: G2,44: G#2,45: A2,46: Bb2,47: B2,48: C3,49: C#3,50: D3,51: D#3,52: E3,53: F3,54: F#3,55: G3,56: G#3,57: A3,58: Bb3,59: B3,60: C4,61: C#4,62: D4,63: D#4,64: E4,65: F4,66: F#4,67: G4,68: G#4,69: A4,70: Bb4,71: B4,72: C5,73: C#5,74: D5,75: D#5,76: E5,77: F5,78: F#5,79: G5,80: G#5,81: A5,82: Bb5,83: B5,84: C6,85: C#6,86: D6,87: D#6,88: E6,89: F6,90: F#6,91: G6,92: G#6,93: A6,94: Bb6,95: B6,96: C7,97: C#7,98: D7,99: D#7,100: E7,101: F7,102: F#7,103: G7,104: G#7,105: A7,106: Bb7,107: B7,108: C8,109: C#8,110: D8,111: D#8,112: E8,113: F8,114: F#8,115: G8,116: G#8,117: A8,118: Bb8,119: B8,120: C9,121: C#9,122: D9,123: D#9,124: E9,125: F9,126: F#9,127: G9}>Roll On Switch
slider8:15<-0,127,1{0: C-1,1: C#-1,2: D-1,3: D#-1,4: E-1,5: F-1,6: F#-1,7: G-1,8: G#-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: C#0,14: D0,15: D#0-1,16: E0,17: F0,18: F#0,19: G0,20: G#0,21: A0,22: Bb0,23: B0,24: C1,25: C#1,26: D1,27: D#1,28: E1,29: F1,30: F#1,31: G1,32: G#1,33: A1,34: Bb1,35: B1,36: C2,37: C#2,38: D2,39: D#2,40: E2,41: F2,42: F#2,43: G2,44: G#2,45: A2,46: Bb2,47: B2,48: C3,49: C#3,50: D3,51: D#3,52: E3,53: F3,54: F#3,55: G3,56: G#3,57: A3,58: Bb3,59: B3,60: C4,61: C#4,62: D4,63: D#4,64: E4,65: F4,66: F#4,67: G4,68: G#4,69: A4,70: Bb4,71: B4,72: C5,73: C#5,74: D5,75: D#5,76: E5,77: F5,78: F#5,79: G5,80: G#5,81: A5,82: Bb5,83: B5,84: C6,85: C#6,86: D6,87: D#6,88: E6,89: F6,90: F#6,91: G6,92: G#6,93: A6,94: Bb6,95: B6,96: C7,97: C#7,98: D7,99: D#7,100: E7,101: F7,102: F#7,103: G7,104: G#7,105: A7,106: Bb7,107: B7,108: C8,109: C#8,110: D8,111: D#8,112: E8,113: F8,114: F#8,115: G8,116: G#8,117: A8,118: Bb8,119: B8,120: C9,121: C#9,122: D9,123: D#9,124: E9,125: F9,126: F#9,127: G9}>Roll Off Switch

in_pin:none
out_pin:none

@init


status=0;
status2=128;
roll_mode = 0;
roll_on = 0;
vel = 64;

velocity_lo= 64;
velocity_hi= 127;
speed_lo= 145;
speed_hi= 180;

speed_rand = 5;
velocity_rand = 2;

memset(status,-1,128);
memset(status2,0,128);

@slider 
velocity_hi=floor(slider1);
velocity_lo=floor(slider2);
velocity_rand=floor(slider3);
speed_hi=slider5*100;
speed_lo=slider4*100;
speed_rand=slider6;
roll_on_key = slider7;
roll_off_key = slider8;

@block
      
while (midirecv(ts, msg1, msg2, msg3)) (
  m = msg1 & 240; 

  (m == 9*16 && msg2 == roll_on_key ) ? (roll_mode = 1):
  (m == 9*16 && msg2 == roll_off_key ) ? (roll_mode = 0):
  (m == 9*16)?
  (
    note = msg2;
    status[note]=0;
    status2[note]=vel;
    midisend(ts,9*16,note,msg3);
    roll_on = 1;
 ) : (m == 8*16 || m == 9*16) ? (
    (m == 8*16)? roll_on = 0;
    note = msg2;
    status[note]=-1;
    status2[note]>0.0 ? (
    midisend(ts,8*16,note); // send note off
      status2[note]=0;
    );
  ) : (m == 11*16)?(
    vel=msg3;
  ):(
    midisend(0,9*16,61,vel); 
  );
);

velocity_diff = velocity_hi - velocity_lo;
speed_diff  = speed_hi - speed_lo;
inc_rt = speed_diff/velocity_diff;

vel < 64 ?(inc = 180):(inc = speed_hi - velocity_diff*inc_rt + rand(speed_rand));

(roll_mode && roll_on) ?(
  counter += inc;
  (counter > 1000) ? (
    counter = 0;
    midisend(ts,9*16,note,vel - velocity_rand + floor(rand(velocity_rand)) );
  );
);
